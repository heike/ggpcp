[{"path":"https://heike.github.io/ggpcp/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://heike.github.io/ggpcp/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://heike.github.io/ggpcp/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://heike.github.io/ggpcp/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://heike.github.io/ggpcp/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://heike.github.io/ggpcp/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://heike.github.io/ggpcp/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://heike.github.io/ggpcp/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://heike.github.io/ggpcp/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://heike.github.io/ggpcp/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://heike.github.io/ggpcp/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://heike.github.io/ggpcp/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://heike.github.io/ggpcp/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://heike.github.io/ggpcp/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://heike.github.io/ggpcp/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://heike.github.io/ggpcp/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://heike.github.io/ggpcp/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://heike.github.io/ggpcp/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://heike.github.io/ggpcp/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://heike.github.io/ggpcp/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://heike.github.io/ggpcp/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) 2019 Yawei Ge  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. ggpcp Copyright (C) 2019 Yawei Ge This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://heike.github.io/ggpcp/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Heike Hofmann. Author, maintainer. Susan VanderPlas. Author. Yawei Ge. Author.","code":""},{"path":"https://heike.github.io/ggpcp/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"VanderPlas S, Ge Y, Unwin , Hofmann H (2023). “Penguins Go Parallel - Grammar Graphics Framework Generalized Parallel Coordinate Plots.” Journal Computational Graphical Statistics, 32(4), 1572–1587. doi:10.1080/10618600.2023.2195462.","code":"@Article{,   title = {Penguins Go Parallel - A Grammar of Graphics Framework for Generalized Parallel Coordinate Plots},   author = {Susan VanderPlas and Yawei Ge and Antony Unwin and Heike Hofmann},   journal = {Journal of Computational and Graphical Statistics},   year = {2023},   volume = {32},   number = {4},   pages = {1572--1587},   doi = {10.1080/10618600.2023.2195462}, }"},{"path":[]},{"path":"https://heike.github.io/ggpcp/index.html","id":"generalized-parallel-coordinate-plots-with-ggpcp","dir":"","previous_headings":"","what":"Generalized parallel coordinate plots with ggpcp","title":"Parallel Coordinate Plots in the ggplot2 Framework","text":"R package creating generalized parallel coordinate plots ggplot2 framework","code":""},{"path":"https://heike.github.io/ggpcp/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Parallel Coordinate Plots in the ggplot2 Framework","text":"ggpcp available Github:","code":"# install.packages(\"devtools\") remotes::install_github(\"heike/ggpcp\")"},{"path":"https://heike.github.io/ggpcp/index.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting Started","title":"Parallel Coordinate Plots in the ggplot2 Framework","text":"Load library Load dataset","code":"library(ggpcp) library(tidyverse) data(flea, package = \"GGally\")"},{"path":"https://heike.github.io/ggpcp/index.html","id":"a-first-parallel-coordinate-plot","dir":"","previous_headings":"","what":"A first parallel coordinate plot","title":"Parallel Coordinate Plots in the ggplot2 Framework","text":"Parallel coordinate plots put number variables side--side - similar side--side dotplots, connect dots belonging observational unit lines. implementation, separating data wrangling part visual rendering. Three main functions part data wrangling: data selection, data scaling, addressing ties (categorical) data.","code":""},{"path":[]},{"path":"https://heike.github.io/ggpcp/index.html","id":"data-selection","dir":"","previous_headings":"A first parallel coordinate plot > Data manipulation","what":"Data selection","title":"Parallel Coordinate Plots in the ggplot2 Framework","text":"pcp_select(data, ...) allows selection variables included parallel coordinate plot. Variables can specified position, e.g. 1:4, 7, 5, 4, name, e.g. class, age, sex, aede1:aede3 selector, e.g. starts_with(\"aede\"), see ?tidyselect::select_helpers combination thereof. Variables can selected multiple times included data resulting plot multiple times. variables need uniquely named internally, multiply selected variables included plot suffix <.number>, familiar multiple occurrences variable names resolved data frames. order variables selected determines order corresponding axis drawn parallel coordinate plots. pcp_select transforms selected variables long form ","code":""},{"path":"https://heike.github.io/ggpcp/index.html","id":"scaling","dir":"","previous_headings":"A first parallel coordinate plot > Data manipulation","what":"Scaling","title":"Parallel Coordinate Plots in the ggplot2 Framework","text":"pcp_scale(data, method) scales values axis determines relative relationship axes . method character string specifying method used transforming values variable common y axis. default, method uniminmax chosen, univariately scales variable range [0,1] minimum 0 maximum 1. globalminmax maps values across axes interval [0,1]. Except scale y axis, results similar picture raw, values left unscaled. ‘?pcp_scale’ gives details.","code":""},{"path":"https://heike.github.io/ggpcp/index.html","id":"breaking-ties-on-categorical-axes","dir":"","previous_headings":"A first parallel coordinate plot > Data manipulation","what":"Breaking Ties on categorical axes","title":"Parallel Coordinate Plots in the ggplot2 Framework","text":"pcp_arrange(data, method, space) provides rescaling values categorical axes break ties. method parameter specifying variables use break ties. two implemented functions -left -right, meaning ties broken using hierarchical ordering using variables’ values left right, respectively. parameter scale specifies size y axis used spacing categorical variables apart. default, 5% axis used spacing.","code":""},{"path":"https://heike.github.io/ggpcp/index.html","id":"data-rendering","dir":"","previous_headings":"A first parallel coordinate plot","what":"Data Rendering","title":"Parallel Coordinate Plots in the ggplot2 Framework","text":"Finally, data piped call ggplot. Note default mappings parallel coordinate plots provided call using aes_pcp. function provides wrapper ggplot2::aes fills default values x y axes well necessary meta information, type variable shown orderings levels factor variables. geom geom_pcp draws line segments connect positions observational unit across axes:  Note variable species shows twice plot - rightmost variables, leftmost one. species categorical variable. ggpcp deals categorical variables using space y axis categorical variable spread points evenly. allows us () estimate frequency level, (b) track individual points parallel coordinate plot even presence categorical variables.","code":"aes_pcp() ## Aesthetic mapping:  ## * `x`     -> `pcp_x` ## * `y`     -> `pcp_y` ## * `yend`  -> `pcp_yend` ## * `class` -> `pcp_class` ## * `group` -> `pcp_id` ## * `level` -> `pcp_level` ## * `label` -> `pcp_level` flea %>%   pcp_select(species, 2:7, species) %>%   pcp_scale(method=\"uniminmax\") %>%   pcp_arrange() %>%   ggplot(aes_pcp()) +      geom_pcp_axes() +      geom_pcp(aes(colour = species))"},{"path":"https://heike.github.io/ggpcp/index.html","id":"the-layer-approach","dir":"","previous_headings":"A first parallel coordinate plot","what":"The layer approach","title":"Parallel Coordinate Plots in the ggplot2 Framework","text":"ggpcp implements several geoms work parallel coordinate plot setting geom_pcp wrapper standard layer drawing line segments observation across specified variables geom_pcp_axes draws vertical lines position axes. geom_pcp_boxes draws rectangles framing level categorical variable. parameter boxwidth specifies width rectangles (1 width successive variables). boxwidth set 0.2 default. geom_pcp_labels places label center rectangle categorical variable. XXX familiar parameters nudge_x nudge_y work usual move labels. XXX HH: need check ’s true","code":"flea %>%   pcp_select(1:7) %>%   pcp_scale(method=\"uniminmax\") %>%   pcp_arrange() %>%   ggplot(aes_pcp()) +      geom_pcp_axes() +      geom_pcp_boxes(boxwidth = 0.1, fill=\"grey70\") +     geom_pcp(aes(colour = species), overplot = \"none\") +     geom_pcp_labels()"},{"path":[]},{"path":"https://heike.github.io/ggpcp/index.html","id":"another-look-at-the-titanic-data","dir":"","previous_headings":"Examples","what":"Another look at the Titanic Data","title":"Parallel Coordinate Plots in the ggplot2 Framework","text":"categorical variables ggpcp presents result similar parsets Kosara et al (2013).  Switching ordering method pcp_arrange -allows us focus two-dimensional relationships variables adjacent axes:  Note now observations within variable level resorted line segments connected adjacent axes. allows us keep track individual observations throughout parallel coordinate plot even presence thousands observations example persons board Titanic.","code":"titanic <- as.data.frame(Titanic) titanic <- titanic %>%   purrr::map(.f = function(x) rep(x, titanic$Freq)) %>%   as.data.frame() %>% select(-Freq)   titanic %>%    pcp_select(1:4) %>%   pcp_scale() %>%   pcp_arrange(method=\"from-right\") %>%   ggplot(aes_pcp()) +      geom_pcp_boxes(boxwidth=0.1) +      geom_pcp(aes(colour = Survived), alpha = 0.1, axiswidth = c(0,0)) +     scale_colour_manual(values=c(\"darkorange\", \"steelblue\")) +     guides(colour=guide_legend(override.aes = list(alpha=1))) +     geom_pcp_labels() +     scale_x_discrete(expand = expansion(add=0.2)) titanic %>%    pcp_select(1:4) %>%   pcp_scale() %>%   pcp_arrange(method=\"from-both\") %>%   ggplot(aes_pcp()) +      geom_pcp_boxes(boxwidth=0.1) +      geom_pcp(aes(colour = Survived), alpha = 0.1) +     scale_colour_manual(values=c(\"darkorange\", \"steelblue\")) +     guides(colour=guide_legend(override.aes = list(alpha=1))) +     geom_pcp_labels() +     scale_x_discrete(expand = expansion(add=0.2)) ## Scale for x is already present. ## Adding another scale for x, which will replace the existing scale."},{"path":"https://heike.github.io/ggpcp/index.html","id":"mixed-data-categorical-and-numeric-variables","dir":"","previous_headings":"Examples","what":"Mixed data: categorical and numeric variables","title":"Parallel Coordinate Plots in the ggplot2 Framework","text":"mtcars data quite old, serves good purpose . variables coded numeric variables, even , fact, factor variables. standard parallel coordinate plot get usual uninformative fishnet categorical variables vs, , gear, also visible variable cyl:  variables coded properly factor variables, get much informative view generalized parallel coordinate plot: Additionally, draw separate facets cars higher lower mileage (20 mpg versus 20 mpg).  becomes obvious plot, fuel consumption car measured miles per gallons (mpg), encoded first variable plot color lines - correlated strongly variables, just numeric variables. large number cylinders (cyl), V-shaped engine (vs = 0), automatic transmission (= 0), low number forward gears high number carburetors related low value mpg (red lines). Note: order line segments drawn depends order observations listed data set. previous example, lines ordered corresponding mileage lowest highest. Line segments cars lowest mileage drawn first (darker shades red), lines cars higher mileage drawn subsequently. car highest mileage drawn dark blue top.","code":"mtcars %>%   pcp_select(1:ncol(mtcars)) %>%   pcp_scale() %>%   ggplot(aes_pcp()) +      geom_pcp_axes() +      geom_pcp(aes(colour = as.numeric(mpg))) mtcars %>%   mutate(cyl = factor(cyl),          vs = factor(vs),          am = factor(am),          gear=factor(gear),          carb = factor(carb),          `liter/100km` = 1/(mpg*1.6/4),          `-disp` = -disp) %>%   arrange(mpg) %>% # draw lines from lowest to highest mileage   pcp_select(1,12, 2:11,13) %>%   pcp_scale() %>%   pcp_arrange(method=\"from-left\") %>%   ggplot(aes_pcp()) +      geom_pcp_axes() +      geom_pcp_boxes(fill=\"grey80\") +      geom_pcp(aes(colour = as.numeric(mpg)), size = 1, overplot = \"none\") +   scale_colour_gradient2(\"mpg\", mid=\"grey80\", midpoint = 20, low=\"darkred\", high=\"darkblue\") +   theme_bw() +    facet_grid(mpg>20~., labeller = \"label_both\")"},{"path":"https://heike.github.io/ggpcp/index.html","id":"bigger-example","dir":"","previous_headings":"Examples","what":"Bigger Example","title":"Parallel Coordinate Plots in the ggplot2 Framework","text":"One application generalized parallel coordinate plots use visualizing clusters. nasa data, made available part ggpcp package provides extension data provided GGally package, used 2006 ASA Expo. consists monthly measurements several climate variables, cloud coverage, temperature, pressure, ozone values, captured 24x24 grid across Central America 1995 2000. grouped locations using January July measurements climate variables using hierarchical clustering based Ward’s distance. resulting clusters can summarized visually. see clusters distinct geographic pattern (tile plot).","code":"data(nasa, package=\"ggpcp\") wide %>% separate(id, into=c(\"y\", \"x\"), remove = FALSE) %>%   mutate(x = as.numeric(x), y = as.numeric(y)) %>%   ggplot(aes(x = x, y=y, fill=factor(cl7))) +   geom_tile() + scale_fill_brewer(\"Cluster\", palette = \"Paired\") +   xlab(\"Latitude\") + ylab(\"Longitude\") +   coord_equal()"},{"path":"https://heike.github.io/ggpcp/index.html","id":"visualizing-the-cluster-process","dir":"","previous_headings":"Examples > Bigger Example","what":"Visualizing the cluster process","title":"Parallel Coordinate Plots in the ggplot2 Framework","text":"regular parallel coordinate plot allows us visualize part dendrogram corresponding hierarchical clustering.  Using generalized parallel coordinate plots can visualize clustering process plots similar Schonlau (2002, 2004) coined clustergram:  Along x-axis number clusters plotted one pcp axis , two clusters (left) 10 clusters (right pcp axis). observation drawn multi-segmented line colored assignment ten-cluster solution. gives excerpt dendrogram allows assessment number observations cluster well relationship successive clustering steps.","code":"wide %>%   pcp_select(86:94) %>%   pcp_scale() %>%   ggplot(aes_pcp()) +      geom_pcp_axes() +      geom_pcp() +   xlab(\"Number of clusters\") wide <- wide %>%   mutate(     cl2 = factor(cl2),     cl3 = factor(cl3),     cl4 = factor(cl4),     cl5 = factor(cl5),     cl6 = factor(cl6),     cl7 = factor(cl7),     cl8 = factor(cl8),     cl9 = factor(cl9),     cl10 = factor(cl10)   )   wide %>%     pcp_select(86:94) %>%   pcp_scale() %>%   pcp_arrange() %>%   ggplot(aes_pcp()) +    geom_pcp_boxes(boxwidth=0.1) +   geom_pcp(aes(colour = cl10), alpha = 0.25) +   xlab(\"Number of clusters\") +   scale_colour_brewer(\"Cluster\", palette=\"Paired\") +   guides(colour=guide_legend(override.aes = list(alpha=1)), reverse = TRUE)"},{"path":"https://heike.github.io/ggpcp/index.html","id":"related-work","dir":"","previous_headings":"","what":"Related work","title":"Parallel Coordinate Plots in the ggplot2 Framework","text":"Parallel coordinate plots implemented analysis software since mid 1980s (Inselberg 1985, Wegman 1990). Several packages R dedicated visualizing parallel coordinate plots. Using base plots main function drawing parallel coordinate plots parcoord implemented MASS (Venables Ripley 2004). package gclus (Hurley 2019) implements cparcoord include panel color representation strength correlation neighboring axes. Within ggplot2 environment several packages implementing parallel coordinate plots. numeric variables ’s function ggparcoord GGally package, categorical variables ggparallel package provides implementation PCP-like plots, Hammock plot (Schonlau 2003) parsets (Kosara et al, 2013). bigPint Google Summer Code project 2017 implemented static interactive versions parallel coordinate plots within framework plotting large data interactively. functions meant exploration discovery fully parameterized appearance.","code":""},{"path":"https://heike.github.io/ggpcp/index.html","id":"motivation-for-the-re-implementation","dir":"","previous_headings":"","what":"Motivation for the Re-implementation","title":"Parallel Coordinate Plots in the ggplot2 Framework","text":"can seen examples , lot approaches parallel coordinate plots, need another implementation? implementations described common describe highly specialized plots - sense tens parameters describing construction, type, appearance plot. giving user flexibility way, approach goes modular approach tidyverse, particular layered approach ggplot2, .e. best approaches make use ggplot2, make use ideas behind ggplot2. main idea ggpcp separate data transformations visualization, .e. rather working single function draw plot, providing set functions work together. idea new - function name point part ggplot2 (see https://www.rdocumentation.org/packages/ggplot2/versions/0.9.2.1/topics/ggpcp), time implementation stalled eventually removed ggplot2.","code":""},{"path":"https://heike.github.io/ggpcp/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"Parallel Coordinate Plots in the ggplot2 Framework","text":"Hofmann H., Vendettuoli M.: Common Angle Plots Perception-True Visualizations Categorical Associations, IEEE Transactions Visualization Computer Graphics, 19(12), 2297-2305, 2013. Hurley C.: gclus: Clustering Graphics. R package version 1.3.2. https://CRAN.R-project.org/package=gclus Inselberg ., Plane Parallel Coordinates, Visual Computer, 1(2), 69-91, 1985. Kosara R., Bendix F., Hauser H., Parallel Sets: Interactive Exploration Visual Analysis Categorical Data, IEEE Transactions Visualization Computer Graphics, 12(4), 558-568, 2006. Schloerke B., Crowley J., Cook D., Briatte F., Marbach M., Thoen E., Elberg ., Larmarange J.: GGally: Extension ‘ggplot2’, R package version 1.4.0. Schonlau M.: Visualizing Categorical Data Arising Health Sciences Using Hammock Plots, Proc. Section Statistical Graphics ASA, 2003. Schonlau M. clustergram: graph visualizing hierarchical non-hierarchical cluster analyses. Stata Journal, 2002; 2 (4):391-402. Schonlau M. Visualizing Hierarchical Non-Hierarchical Cluster Analyses Clustergrams. Computational Statistics: 2004; 19(1):95-111. Venables W.N., Ripley B.D.: Modern Applied Statistics S (4th ed), Springer, 2002. Wegman, E., Hyperdimensional Data Analysis Using Parallel Coordinates, JASA, 85(411), 664-675, 1990. Wickham H., ggplot2: Elegant graphics data analysis (2nd ed), Springer, 2016 Wickham H., Tidy data. Journal Statistical Software, 59, 2014. Wilkinson L., Grammar Graphics. Statistics Computing, Springer, 1999.","code":""},{"path":"https://heike.github.io/ggpcp/reference/Carcinoma.html","id":null,"dir":"Reference","previous_headings":"","what":"Data set: Assessment of Carcinoma slides — Carcinoma","title":"Data set: Assessment of Carcinoma slides — Carcinoma","text":"differently formatted data set available carcinoma package poLCA. , pathologists' ratings recorded","code":""},{"path":"https://heike.github.io/ggpcp/reference/Carcinoma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data set: Assessment of Carcinoma slides — Carcinoma","text":"","code":"Carcinoma"},{"path":"https://heike.github.io/ggpcp/reference/Carcinoma.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data set: Assessment of Carcinoma slides — Carcinoma","text":"data frame 118 rows 9 variables:","code":""},{"path":"https://heike.github.io/ggpcp/reference/Carcinoma.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Data set: Assessment of Carcinoma slides — Carcinoma","text":"Data published Table 1 Landis, J. Richard,  Koch, Gary G. \"Application Hierarchical Kappa-type Statistics Assessment Majority Agreement among Multiple Observers.\" Biometrics 33.2 (1977): 363-74, doi:10.2307/2529786 . Study Design Holmquist, Nelson D., McMahan C.., Williams O. Dale. Variability classification carcinoma situ uterine cervix. Arch Pathol. 1967 Oct;84(4):334-45. PMID: 6045443, doi:10.1097/00006254-196806000-00023 .","code":""},{"path":"https://heike.github.io/ggpcp/reference/Carcinoma.html","id":"overall-structure","dir":"Reference","previous_headings":"","what":"Overall structure","title":"Data set: Assessment of Carcinoma slides — Carcinoma","text":"slide number 1 126 (data slides 14, 20, 21, 50, 75, 97, 109, 125 missing) Average average rating eight pathologists.","code":""},{"path":"https://heike.github.io/ggpcp/reference/Carcinoma.html","id":"pathologist-ratings","dir":"Reference","previous_headings":"","what":"Pathologist ratings","title":"Data set: Assessment of Carcinoma slides — Carcinoma","text":"scores 1 5 pathologist's evaluation (1) Negative; (2) Atypical Squamous Hyperplasia; (3) Carcinoma Situ; (4) Squamous Carcinoma Early Stromal Invasion; (5) Invasive Carcinoma. B scores pathologist B. C scores pathologist C. D scores pathologist D. E scores pathologist E. F scores pathologist F. G scores pathologist G.","code":""},{"path":"https://heike.github.io/ggpcp/reference/Carcinoma.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data set: Assessment of Carcinoma slides — Carcinoma","text":"","code":"library(ggplot2) Carcinoma |>   pcp_select(F, D, C, A, G, E, B, Average) |>   pcp_scale(method=\"uniminmax\") |>   pcp_arrange() |>   ggplot(aes_pcp()) +     geom_pcp_axes() +     geom_pcp(aes(colour = Average > 2)) +     geom_pcp_boxes(colour=\"black\", alpha=0) +     geom_pcp_labels(aes(label = pcp_level), fill=\"white\", alpha = 1) +     theme_bw() +     scale_x_discrete(expand = expansion(add=0.25)) +     xlab(\"Pathologist\") + ylab(\"Carcinoma score 1 (Negative) to 5 (Invasive Carcinoma)\") +     theme(axis.text.y=element_blank(), axis.ticks.y=element_blank(), legend.position=\"none\") #> Scale for x is already present. #> Adding another scale for x, which will replace the existing scale."},{"path":"https://heike.github.io/ggpcp/reference/GeomPcp.html","id":null,"dir":"Reference","previous_headings":"","what":"Proto version of the pcp geoms — GeomPcp_axes","title":"Proto version of the pcp geoms — GeomPcp_axes","text":"functions exported visible ggplot2 internal functions. User-relevant documentation can found instead geom_pcp().","code":""},{"path":"https://heike.github.io/ggpcp/reference/aes_pcp.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrapper for aes defaults — aes_pcp","title":"Wrapper for aes defaults — aes_pcp","text":"function provides mapping ggpcp internal variable names variables' functional purpose grammar graphics framework. defaults can overwritten user flexibly expanded aesthetic mappings usual manner.","code":""},{"path":"https://heike.github.io/ggpcp/reference/aes_pcp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrapper for aes defaults — aes_pcp","text":"","code":"aes_pcp(   x = pcp_x,   y = pcp_y,   yend = pcp_yend,   class = pcp_class,   group = pcp_id,   level = pcp_level,   label = pcp_level,   ... )"},{"path":"https://heike.github.io/ggpcp/reference/aes_pcp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrapper for aes defaults — aes_pcp","text":"x x axis y y axis yend end point line segment class specifying type variable group identifier level character string factor levels label label factors ... aesthetics directly passed ggplot2's mapping","code":""},{"path":"https://heike.github.io/ggpcp/reference/aes_pcp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wrapper for aes defaults — aes_pcp","text":"list default mappings required aesthetics","code":""},{"path":[]},{"path":"https://heike.github.io/ggpcp/reference/aes_pcp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Wrapper for aes defaults — aes_pcp","text":"","code":"library(ggplot2) iris |>   pcp_select(tidyselect::everything()) |>   pcp_scale() |>   pcp_arrange() |>   ggplot(aes_pcp(colour = Species)) +     geom_pcp() +     theme_pcp()"},{"path":"https://heike.github.io/ggpcp/reference/geom_pcp.html","id":null,"dir":"Reference","previous_headings":"","what":"Generalized Parallel Coordinate plots — geom_pcp","title":"Generalized Parallel Coordinate plots — geom_pcp","text":"ggpcp package generalized parallel coordinate plots implemented ggplot2 extension. particular, implementation makes use ggplot2's layer framework, allowing lot flexibility choice order showing graphical elements. ggpcp specific layers can mixed ggplot2's regular geoms, e.g. ggplot2::geom_point(), ggplot2::geom_boxplot(), ggdensity::geom_hdr(), etc.","code":""},{"path":"https://heike.github.io/ggpcp/reference/geom_pcp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generalized Parallel Coordinate plots — geom_pcp","text":"","code":"geom_pcp(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   na.rm = FALSE,   axiswidth = c(0, 0.1),   overplot = \"small-on-top\",   show.legend = NA,   inherit.aes = TRUE,   ... )"},{"path":"https://heike.github.io/ggpcp/reference/geom_pcp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generalized Parallel Coordinate plots — geom_pcp","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). stat statistical transformation use data layer. using geom_*() function construct layer, stat argument can used override default coupling geoms stats. stat argument accepts following: Stat ggproto subclass, example StatCount. string naming stat. give stat string, strip function name stat_ prefix. example, use stat_count(), give stat \"count\". information ways specify stat, see layer stat documentation. position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. na.rm FALSE (default), removes missing values warning. TRUE silently removes missing values. axiswidth vector two values indicating space  numeric categorical axes supposed take. Minimum 0, maximum 1.Defaults 0 numeric axis 0.1 categorical axis. overplot character value indicating method used mitigate overplotting lines. Defaults 'small--top'. overplotting strategy 'small--top' identifies number observations combination levels two categorical variables plots lines highest frequency smallest (effectively plotting small groups top). strategy 'none' gives flexibility user - plotting order preserved order observations included original data. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders(). ... arguments passed layer. often aesthetics, used set aesthetic fixed value, like color = 'red' size = 3. may also parameters paired geom/stat.","code":""},{"path":"https://heike.github.io/ggpcp/reference/geom_pcp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generalized Parallel Coordinate plots — geom_pcp","text":"list consisting ggplot2::layer() object associated scales.","code":""},{"path":"https://heike.github.io/ggpcp/reference/geom_pcp.html","id":"about-parallel-coordinate-plots","dir":"Reference","previous_headings":"","what":"About Parallel Coordinate Plots","title":"Generalized Parallel Coordinate plots — geom_pcp","text":"Parallel coordinate plots multivariate visualization allows several aspects observed entity shown single plot. aspect represented vertical axis (giving plot name), values marked axes. Values corresponding entity connected line segments adjacent axes. type visualization first used d’Ocagne (1985). Modern re-inventions go back Inselberg (1985) Wegman (1990). implementation takes general approach also able deal  categorical principled way allows tracking individual observations across multiple dimensions.","code":""},{"path":"https://heike.github.io/ggpcp/reference/geom_pcp.html","id":"data-wrangling","dir":"Reference","previous_headings":"","what":"Data wrangling","title":"Generalized Parallel Coordinate plots — geom_pcp","text":"data pipeline feeding geom_pcp implemented three-step modularized form rather stat_pcp function typical ggplot2 extensions. three steps data pre-processing : Note data processing steps executed call ggplot2 identity function used default ggpcp specific layers. Besides speed-executing processing steps layers, separation additional benefit, provides users possibility make specific choices step process. Additionally, separation allows cleaner user interface: parameters affecting data preparation process can moved relevant (set ) function(s) , thereby reducing  number arguments without loss functionality.","code":""},{"path":"https://heike.github.io/ggpcp/reference/geom_pcp.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Generalized Parallel Coordinate plots — geom_pcp","text":"M. d’Ocagne. (1885) Coordonnées parallèles et axiales: Méthode de transformation géométrique et procédé nouveau de calcul graphique déduits de la considération des coordonnées parallèles. Gauthier-Villars, page 112, https://archive.org/details/coordonnesparal00ocaggoog/page/n10. Al Inselberg. (1985) plane parallel coordinates. Visual Computer, 1(2):69–91,  doi:10.1007/BF01898350 . Ed J. Wegman. (1990) Hyperdimensional data analysis using parallel coordinates. Journal American Statistical Association, 85:664–675, doi:10.2307/2290001 .","code":""},{"path":"https://heike.github.io/ggpcp/reference/geom_pcp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generalized Parallel Coordinate plots — geom_pcp","text":"","code":"library(ggplot2) data(mtcars) mtcars_pcp <- mtcars |>   dplyr::mutate(     cyl = factor(cyl),     vs = factor(vs),     am = factor(am),     gear = factor(gear),     carb = factor(carb)   ) |>   pcp_select(1:11) |>  # select everything   pcp_scale() |>   pcp_arrange()   base <- mtcars_pcp |> ggplot(aes_pcp())    # Just the base plot:  base + geom_pcp()    # with the pcp theme  base + geom_pcp() + theme_pcp()    # with boxplots:  base +   geom_pcp(aes(colour = cyl)) +   geom_boxplot(aes(x = pcp_x, y = pcp_y),    inherit.aes=FALSE,    data = dplyr::filter(mtcars_pcp, pcp_class!=\"factor\")) +   theme_pcp()   # base plot with boxes and labels  base +   geom_pcp(aes(colour = cyl)) +   geom_pcp_boxes() +   geom_pcp_labels() +   theme_pcp()"},{"path":"https://heike.github.io/ggpcp/reference/geom_pcp_axes.html","id":null,"dir":"Reference","previous_headings":"","what":"Generalized Parallel Coordinate plots — geom_pcp_axes","title":"Generalized Parallel Coordinate plots — geom_pcp_axes","text":"ggpcp package generalized parallel coordinate plots implemented ggplot2 extension. particular, implementation makes use ggplot2's layer framework, allowing lot flexibility choice order showing graphical elements. ggpcp specific layers can mixed ggplot2's regular geoms, e.g. ggplot2::geom_point(), ggplot2::geom_boxplot(), ggdensity::geom_hdr(), etc.","code":""},{"path":"https://heike.github.io/ggpcp/reference/geom_pcp_axes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generalized Parallel Coordinate plots — geom_pcp_axes","text":"","code":"geom_pcp_axes(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE,   ... )"},{"path":"https://heike.github.io/ggpcp/reference/geom_pcp_axes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generalized Parallel Coordinate plots — geom_pcp_axes","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). stat statistical transformation use data layer. using geom_*() function construct layer, stat argument can used override default coupling geoms stats. stat argument accepts following: Stat ggproto subclass, example StatCount. string naming stat. give stat string, strip function name stat_ prefix. example, use stat_count(), give stat \"count\". information ways specify stat, see layer stat documentation. position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. na.rm FALSE (default), removes missing values warning. TRUE silently removes missing values. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders(). ... arguments passed layer. often aesthetics, used set aesthetic fixed value, like color = 'red' size = 3. may also parameters paired geom/stat.","code":""},{"path":"https://heike.github.io/ggpcp/reference/geom_pcp_axes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generalized Parallel Coordinate plots — geom_pcp_axes","text":"list consisting ggplot2::layer() object associated scales.","code":""},{"path":"https://heike.github.io/ggpcp/reference/geom_pcp_axes.html","id":"about-parallel-coordinate-plots","dir":"Reference","previous_headings":"","what":"About Parallel Coordinate Plots","title":"Generalized Parallel Coordinate plots — geom_pcp_axes","text":"Parallel coordinate plots multivariate visualization allows several aspects observed entity shown single plot. aspect represented vertical axis (giving plot name), values marked axes. Values corresponding entity connected line segments adjacent axes. type visualization first used d’Ocagne (1985). Modern re-inventions go back Inselberg (1985) Wegman (1990). implementation takes general approach also able deal  categorical principled way allows tracking individual observations across multiple dimensions.","code":""},{"path":"https://heike.github.io/ggpcp/reference/geom_pcp_axes.html","id":"data-wrangling","dir":"Reference","previous_headings":"","what":"Data wrangling","title":"Generalized Parallel Coordinate plots — geom_pcp_axes","text":"data pipeline feeding geom_pcp implemented three-step modularized form rather stat_pcp function typical ggplot2 extensions. three steps data pre-processing : Note data processing steps executed call ggplot2 identity function used default ggpcp specific layers. Besides speed-executing processing steps layers, separation additional benefit, provides users possibility make specific choices step process. Additionally, separation allows cleaner user interface: parameters affecting data preparation process can moved relevant (set ) function(s) , thereby reducing  number arguments without loss functionality.","code":""},{"path":"https://heike.github.io/ggpcp/reference/geom_pcp_axes.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Generalized Parallel Coordinate plots — geom_pcp_axes","text":"M. d’Ocagne. (1885) Coordonnées parallèles et axiales: Méthode de transformation géométrique et procédé nouveau de calcul graphique déduits de la considération des coordonnées parallèles. Gauthier-Villars, page 112, https://archive.org/details/coordonnesparal00ocaggoog/page/n10. Al Inselberg. (1985) plane parallel coordinates. Visual Computer, 1(2):69–91,  doi:10.1007/BF01898350 . Ed J. Wegman. (1990) Hyperdimensional data analysis using parallel coordinates. Journal American Statistical Association, 85:664–675, doi:10.2307/2290001 .","code":""},{"path":"https://heike.github.io/ggpcp/reference/geom_pcp_axes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generalized Parallel Coordinate plots — geom_pcp_axes","text":"","code":"library(ggplot2) data(mtcars) mtcars_pcp <- mtcars |>   dplyr::mutate(     cyl = factor(cyl),     vs = factor(vs),     am = factor(am),     gear = factor(gear),     carb = factor(carb)   ) |>   pcp_select(1:11) |>  # select everything   pcp_scale() |>   pcp_arrange()   base <- mtcars_pcp |> ggplot(aes_pcp())    # Just the base plot:  base + geom_pcp()    # with the pcp theme  base + geom_pcp() + theme_pcp()    # with boxplots:  base +   geom_pcp(aes(colour = cyl)) +   geom_boxplot(aes(x = pcp_x, y = pcp_y),    inherit.aes=FALSE,    data = dplyr::filter(mtcars_pcp, pcp_class!=\"factor\")) +   theme_pcp()   # base plot with boxes and labels  base +   geom_pcp(aes(colour = cyl)) +   geom_pcp_boxes() +   geom_pcp_labels() +   theme_pcp()"},{"path":"https://heike.github.io/ggpcp/reference/geom_pcp_boxes.html","id":null,"dir":"Reference","previous_headings":"","what":"Generalized Parallel Coordinate plots — geom_pcp_boxes","title":"Generalized Parallel Coordinate plots — geom_pcp_boxes","text":"ggpcp package generalized parallel coordinate plots implemented ggplot2 extension. particular, implementation makes use ggplot2's layer framework, allowing lot flexibility choice order showing graphical elements. ggpcp specific layers can mixed ggplot2's regular geoms, e.g. ggplot2::geom_point(), ggplot2::geom_boxplot(), ggdensity::geom_hdr(), etc.","code":""},{"path":"https://heike.github.io/ggpcp/reference/geom_pcp_boxes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generalized Parallel Coordinate plots — geom_pcp_boxes","text":"","code":"geom_pcp_boxes(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE,   boxwidth = 0.2,   ... )"},{"path":"https://heike.github.io/ggpcp/reference/geom_pcp_boxes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generalized Parallel Coordinate plots — geom_pcp_boxes","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). stat statistical transformation use data layer. using geom_*() function construct layer, stat argument can used override default coupling geoms stats. stat argument accepts following: Stat ggproto subclass, example StatCount. string naming stat. give stat string, strip function name stat_ prefix. example, use stat_count(), give stat \"count\". information ways specify stat, see layer stat documentation. position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. na.rm FALSE (default), removes missing values warning. TRUE silently removes missing values. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders(). boxwidth width box level categorical axis, defaults 0.2. ... arguments passed layer. often aesthetics, used set aesthetic fixed value, like color = 'red' size = 3. may also parameters paired geom/stat.","code":""},{"path":"https://heike.github.io/ggpcp/reference/geom_pcp_boxes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generalized Parallel Coordinate plots — geom_pcp_boxes","text":"list consisting ggplot2::layer() object associated scales.","code":""},{"path":"https://heike.github.io/ggpcp/reference/geom_pcp_boxes.html","id":"about-parallel-coordinate-plots","dir":"Reference","previous_headings":"","what":"About Parallel Coordinate Plots","title":"Generalized Parallel Coordinate plots — geom_pcp_boxes","text":"Parallel coordinate plots multivariate visualization allows several aspects observed entity shown single plot. aspect represented vertical axis (giving plot name), values marked axes. Values corresponding entity connected line segments adjacent axes. type visualization first used d’Ocagne (1985). Modern re-inventions go back Inselberg (1985) Wegman (1990). implementation takes general approach also able deal  categorical principled way allows tracking individual observations across multiple dimensions.","code":""},{"path":"https://heike.github.io/ggpcp/reference/geom_pcp_boxes.html","id":"data-wrangling","dir":"Reference","previous_headings":"","what":"Data wrangling","title":"Generalized Parallel Coordinate plots — geom_pcp_boxes","text":"data pipeline feeding geom_pcp implemented three-step modularized form rather stat_pcp function typical ggplot2 extensions. three steps data pre-processing : Note data processing steps executed call ggplot2 identity function used default ggpcp specific layers. Besides speed-executing processing steps layers, separation additional benefit, provides users possibility make specific choices step process. Additionally, separation allows cleaner user interface: parameters affecting data preparation process can moved relevant (set ) function(s) , thereby reducing  number arguments without loss functionality.","code":""},{"path":"https://heike.github.io/ggpcp/reference/geom_pcp_boxes.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Generalized Parallel Coordinate plots — geom_pcp_boxes","text":"M. d’Ocagne. (1885) Coordonnées parallèles et axiales: Méthode de transformation géométrique et procédé nouveau de calcul graphique déduits de la considération des coordonnées parallèles. Gauthier-Villars, page 112, https://archive.org/details/coordonnesparal00ocaggoog/page/n10. Al Inselberg. (1985) plane parallel coordinates. Visual Computer, 1(2):69–91,  doi:10.1007/BF01898350 . Ed J. Wegman. (1990) Hyperdimensional data analysis using parallel coordinates. Journal American Statistical Association, 85:664–675, doi:10.2307/2290001 .","code":""},{"path":"https://heike.github.io/ggpcp/reference/geom_pcp_boxes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generalized Parallel Coordinate plots — geom_pcp_boxes","text":"","code":"library(ggplot2) data(mtcars) mtcars_pcp <- mtcars |>   dplyr::mutate(     cyl = factor(cyl),     vs = factor(vs),     am = factor(am),     gear = factor(gear),     carb = factor(carb)   ) |>   pcp_select(1:11) |>  # select everything   pcp_scale() |>   pcp_arrange()   base <- mtcars_pcp |> ggplot(aes_pcp())    # Just the base plot:  base + geom_pcp()    # with the pcp theme  base + geom_pcp() + theme_pcp()    # with boxplots:  base +   geom_pcp(aes(colour = cyl)) +   geom_boxplot(aes(x = pcp_x, y = pcp_y),    inherit.aes=FALSE,    data = dplyr::filter(mtcars_pcp, pcp_class!=\"factor\")) +   theme_pcp()   # base plot with boxes and labels  base +   geom_pcp(aes(colour = cyl)) +   geom_pcp_boxes() +   geom_pcp_labels() +   theme_pcp()"},{"path":"https://heike.github.io/ggpcp/reference/geom_pcp_labels.html","id":null,"dir":"Reference","previous_headings":"","what":"Generalized Parallel Coordinate plots — geom_pcp_labels","title":"Generalized Parallel Coordinate plots — geom_pcp_labels","text":"ggpcp package generalized parallel coordinate plots implemented ggplot2 extension. particular, implementation makes use ggplot2's layer framework, allowing lot flexibility choice order showing graphical elements. ggpcp specific layers can mixed ggplot2's regular geoms, e.g. ggplot2::geom_point(), ggplot2::geom_boxplot(), ggdensity::geom_hdr(), etc.","code":""},{"path":"https://heike.github.io/ggpcp/reference/geom_pcp_labels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generalized Parallel Coordinate plots — geom_pcp_labels","text":"","code":"geom_pcp_labels(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE,   ... )"},{"path":"https://heike.github.io/ggpcp/reference/geom_pcp_labels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generalized Parallel Coordinate plots — geom_pcp_labels","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). stat statistical transformation use data layer. using geom_*() function construct layer, stat argument can used override default coupling geoms stats. stat argument accepts following: Stat ggproto subclass, example StatCount. string naming stat. give stat string, strip function name stat_ prefix. example, use stat_count(), give stat \"count\". information ways specify stat, see layer stat documentation. position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. na.rm FALSE (default), removes missing values warning. TRUE silently removes missing values. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders(). ... arguments passed layer. often aesthetics, used set aesthetic fixed value, like color = 'red' size = 3. may also parameters paired geom/stat.","code":""},{"path":"https://heike.github.io/ggpcp/reference/geom_pcp_labels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generalized Parallel Coordinate plots — geom_pcp_labels","text":"list consisting ggplot2::layer() object associated scales.","code":""},{"path":"https://heike.github.io/ggpcp/reference/geom_pcp_labels.html","id":"about-parallel-coordinate-plots","dir":"Reference","previous_headings":"","what":"About Parallel Coordinate Plots","title":"Generalized Parallel Coordinate plots — geom_pcp_labels","text":"Parallel coordinate plots multivariate visualization allows several aspects observed entity shown single plot. aspect represented vertical axis (giving plot name), values marked axes. Values corresponding entity connected line segments adjacent axes. type visualization first used d’Ocagne (1985). Modern re-inventions go back Inselberg (1985) Wegman (1990). implementation takes general approach also able deal  categorical principled way allows tracking individual observations across multiple dimensions.","code":""},{"path":"https://heike.github.io/ggpcp/reference/geom_pcp_labels.html","id":"data-wrangling","dir":"Reference","previous_headings":"","what":"Data wrangling","title":"Generalized Parallel Coordinate plots — geom_pcp_labels","text":"data pipeline feeding geom_pcp implemented three-step modularized form rather stat_pcp function typical ggplot2 extensions. three steps data pre-processing : Note data processing steps executed call ggplot2 identity function used default ggpcp specific layers. Besides speed-executing processing steps layers, separation additional benefit, provides users possibility make specific choices step process. Additionally, separation allows cleaner user interface: parameters affecting data preparation process can moved relevant (set ) function(s) , thereby reducing  number arguments without loss functionality.","code":""},{"path":"https://heike.github.io/ggpcp/reference/geom_pcp_labels.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Generalized Parallel Coordinate plots — geom_pcp_labels","text":"M. d’Ocagne. (1885) Coordonnées parallèles et axiales: Méthode de transformation géométrique et procédé nouveau de calcul graphique déduits de la considération des coordonnées parallèles. Gauthier-Villars, page 112, https://archive.org/details/coordonnesparal00ocaggoog/page/n10. Al Inselberg. (1985) plane parallel coordinates. Visual Computer, 1(2):69–91,  doi:10.1007/BF01898350 . Ed J. Wegman. (1990) Hyperdimensional data analysis using parallel coordinates. Journal American Statistical Association, 85:664–675, doi:10.2307/2290001 .","code":""},{"path":"https://heike.github.io/ggpcp/reference/geom_pcp_labels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generalized Parallel Coordinate plots — geom_pcp_labels","text":"","code":"library(ggplot2) data(mtcars) mtcars_pcp <- mtcars |>   dplyr::mutate(     cyl = factor(cyl),     vs = factor(vs),     am = factor(am),     gear = factor(gear),     carb = factor(carb)   ) |>   pcp_select(1:11) |>  # select everything   pcp_scale() |>   pcp_arrange()   base <- mtcars_pcp |> ggplot(aes_pcp())    # Just the base plot:  base + geom_pcp()    # with the pcp theme  base + geom_pcp() + theme_pcp()    # with boxplots:  base +   geom_pcp(aes(colour = cyl)) +   geom_boxplot(aes(x = pcp_x, y = pcp_y),    inherit.aes=FALSE,    data = dplyr::filter(mtcars_pcp, pcp_class!=\"factor\")) +   theme_pcp()   # base plot with boxes and labels  base +   geom_pcp(aes(colour = cyl)) +   geom_pcp_boxes() +   geom_pcp_labels() +   theme_pcp()"},{"path":"https://heike.github.io/ggpcp/reference/ggpcp-package.html","id":null,"dir":"Reference","previous_headings":"","what":"ggpcp: Parallel Coordinate Plots in the 'ggplot2' Framework — ggpcp-package","title":"ggpcp: Parallel Coordinate Plots in the 'ggplot2' Framework — ggpcp-package","text":"Modern Parallel Coordinate Plots introduced 1980s way visualize arbitrarily many numeric variables. Grammar Graphics implementation also incorporates categorical variables plots principled manner. separating data managing part visual rendering, give full access users keeping number parameters manageably low.","code":""},{"path":[]},{"path":"https://heike.github.io/ggpcp/reference/ggpcp-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"ggpcp: Parallel Coordinate Plots in the 'ggplot2' Framework — ggpcp-package","text":"Maintainer: Heike Hofmann hofmann@iastate.edu (ORCID) Authors: Susan VanderPlas susan.vanderplas@unl.edu (ORCID) Yawei Ge yaweige@iastate.edu","code":""},{"path":"https://heike.github.io/ggpcp/reference/nasa.html","id":null,"dir":"Reference","previous_headings":"","what":"Data set: NASA - Data Expo 2006 — nasa","title":"Data set: NASA - Data Expo 2006 — nasa","text":"data geographic atmospheric measures coarse 24 24 grid covering Central America. data provided NASA Langley Research Center Atmospheric Sciences Data Center part ASA Data Expo 2006. Monthly averages set atmospheric measurements provided Jan 1995 Dec 2000. subset data available GGally package.","code":""},{"path":"https://heike.github.io/ggpcp/reference/nasa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data set: NASA - Data Expo 2006 — nasa","text":"","code":"nasa"},{"path":"https://heike.github.io/ggpcp/reference/nasa.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data set: NASA - Data Expo 2006 — nasa","text":"data frame 41472 (= 24 x 24 x 72) rows 15 variables:","code":""},{"path":"https://heike.github.io/ggpcp/reference/nasa.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Data set: NASA - Data Expo 2006 — nasa","text":"https://community.amstat.org/jointscsg-section/dataexpo/dataexpo2006","code":""},{"path":"https://heike.github.io/ggpcp/reference/nasa.html","id":"structural-variables","dir":"Reference","previous_headings":"","what":"Structural variables","title":"Data set: NASA - Data Expo 2006 — nasa","text":"time time index month 1 (= Jan 1995) 72 (= Dec 2000) id identifier grid point 1-1 24-24 lat, long geographic latitude longitude elevation altitude location meters sea level month, year, date year/month measurement","code":""},{"path":"https://heike.github.io/ggpcp/reference/nasa.html","id":"measured-variables","dir":"Reference","previous_headings":"","what":"Measured variables","title":"Data set: NASA - Data Expo 2006 — nasa","text":"cloudlow, cloudmid, cloudhigh Cloud cover (percent) low, middle, high levels. ozone mean ozone abundance (dobson) pressure mean surface pressure (millibars) surftemp, temperature mean surface/near surface air temperature (Kelvin)","code":""},{"path":"https://heike.github.io/ggpcp/reference/nasa.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data set: NASA - Data Expo 2006 — nasa","text":"","code":"data(nasa) library(ggplot2) nasa |>   dplyr::filter(id == \"1-10\") |>   pcp_select(starts_with(\"cloud\"), ozone, temperature) |>   pcp_scale() |>   ggplot(aes_pcp()) +  geom_pcp(aes(colour=month))"},{"path":"https://heike.github.io/ggpcp/reference/pcp_arrange.html","id":null,"dir":"Reference","previous_headings":"","what":"Data wrangling for GPCPs: Step 3 order observations in factor variables — pcp_arrange","title":"Data wrangling for GPCPs: Step 3 order observations in factor variables — pcp_arrange","text":"Break ties levels factor variables, space cases equally set order. Note ties factor variables addressed way.","code":""},{"path":"https://heike.github.io/ggpcp/reference/pcp_arrange.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data wrangling for GPCPs: Step 3 order observations in factor variables — pcp_arrange","text":"","code":"pcp_arrange(data, method = \"from-right\", space = 0.05, .by_group = TRUE)"},{"path":"https://heike.github.io/ggpcp/reference/pcp_arrange.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data wrangling for GPCPs: Step 3 order observations in factor variables — pcp_arrange","text":"data data frame - preferably processed using pcp_select pcp_scale. method method breaking ties, one \"-right\", \"-left\" \"-\". space number 0 1, indicating proportion space used separating multiple levels. .by_group logical value. TRUE, scaling respect previous grouping variables. Applies grouped data frames .","code":""},{"path":"https://heike.github.io/ggpcp/reference/pcp_arrange.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Data wrangling for GPCPs: Step 3 order observations in factor variables — pcp_arrange","text":"data frame size input data; values pcp_y pcp_yend adjusted pcp_class == \"factor\"","code":""},{"path":"https://heike.github.io/ggpcp/reference/pcp_arrange.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Data wrangling for GPCPs: Step 3 order observations in factor variables — pcp_arrange","text":"data pipeline feeding geom layers ggpcp package implemented three-step modularized form rather stat functions typical ggplot2 extensions. three steps data pre-processing : Note data processing steps executed call ggplot2 identity function used default ggpcp specific layers. Besides speed-executing processing steps layers, separation additional benefit, provides users possibility make specific choices step process. Additionally, separation allows cleaner user interface: parameters affecting data preparation process can moved relevant (set ) function(s) , thereby reducing  number arguments without loss functionality.","code":""},{"path":[]},{"path":"https://heike.github.io/ggpcp/reference/pcp_arrange.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data wrangling for GPCPs: Step 3 order observations in factor variables — pcp_arrange","text":"","code":"library(ggplot2) data(Carcinoma) # select scores pcp_data <- Carcinoma |>   pcp_select(A:G) |>   pcp_scale()  # y values are on five different values table(pcp_data$pcp_y) #>  #>    0 0.25  0.5 0.75    1  #>  232  210  301   61   22   # spread out y values pcp_data  |> pcp_arrange() |>   ggplot(aes(x = pcp_y)) + geom_histogram(binwidth=0.05)"},{"path":"https://heike.github.io/ggpcp/reference/pcp_scale.html","id":null,"dir":"Reference","previous_headings":"","what":"Data wrangling for GPCPs: Step 2 scale values — pcp_scale","title":"Data wrangling for GPCPs: Step 2 scale values — pcp_scale","text":"function pcp_scale provides access set transformations use parallel coordinate plots. transformations raw tend produce y values interval 0 1.","code":""},{"path":"https://heike.github.io/ggpcp/reference/pcp_scale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data wrangling for GPCPs: Step 2 scale values — pcp_scale","text":"","code":"pcp_scale(data, method = \"uniminmax\", .by_group = TRUE)"},{"path":"https://heike.github.io/ggpcp/reference/pcp_scale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data wrangling for GPCPs: Step 2 scale values — pcp_scale","text":"data data frame returned select_pcp method string specifying method used scaling values parallel coordinate plot (see Details). .by_group logical value. TRUE, scaling respect previous grouping variables. Applies grouped data frames .","code":""},{"path":"https://heike.github.io/ggpcp/reference/pcp_scale.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Data wrangling for GPCPs: Step 2 scale values — pcp_scale","text":"data frame size input data; values pcp_y pcp_yend scaled according specified method.","code":""},{"path":"https://heike.github.io/ggpcp/reference/pcp_scale.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Data wrangling for GPCPs: Step 2 scale values — pcp_scale","text":"data pipeline feeding geom layers ggpcp package implemented three-step modularized form rather stat functions typical ggplot2 extensions. three steps data pre-processing : Note data processing steps executed call ggplot2 identity function used default ggpcp specific layers. Besides speed-executing processing steps layers, separation additional benefit, provides users possibility make specific choices step process. Additionally, separation allows cleaner user interface: parameters affecting data preparation process can moved relevant (set ) function(s) , thereby reducing  number arguments without loss functionality. method character string denotes scale variables parallel coordinate plot. Options named way options GGally::ggparcoord(): raw: raw data used, scaling done. std: univariately, subtract mean divide standard deviation. get values unit interval use linear transformation f(y) = y/4+0.5. robust: univariately, subtract median divide median absolute deviation. get values expected interval unit interval use linear transformation f(y) = y/4+0.5. uniminmax: univariately, scale minimum variable zero, maximum one. globalminmax: global scaling; global maximum mapped 1, global minimum across variables mapped 0.","code":""},{"path":[]},{"path":"https://heike.github.io/ggpcp/reference/pcp_scale.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data wrangling for GPCPs: Step 2 scale values — pcp_scale","text":"","code":"data(Carcinoma) dim(Carcinoma) #> [1] 118   9 # select all variables pcp_data <- Carcinoma |> pcp_select(1:9) summary(pcp_data) #>      pcp_id          pcp_x      pcp_level             pcp_y         #>  Min.   :  1.0   No     :118   Length:1062        Min.   :  1.000   #>  1st Qu.: 30.0   Average:118   Class :character   1st Qu.:  1.607   #>  Median : 59.5   A      :118   Mode  :character   Median :  2.929   #>  Mean   : 59.5   B      :118                      Mean   :  9.107   #>  3rd Qu.: 89.0   C      :118                      3rd Qu.:  3.000   #>  Max.   :118.0   D      :118                      Max.   :126.000   #>                  (Other):354                                        #>     pcp_yend        pcp_class               No            Average      A       #>  Min.   :  1.000   Length:1062        Min.   :  1.00   Min.   :1.000   1:234   #>  1st Qu.:  1.607   Class :character   1st Qu.: 33.00   1st Qu.:1.571   2:234   #>  Median :  2.929   Mode  :character   Median : 63.50   Median :2.429   3:342   #>  Mean   :  9.107                      Mean   : 63.47   Mean   :2.311   4:198   #>  3rd Qu.:  3.000                      3rd Qu.: 94.00   3rd Qu.:3.000   5: 54   #>  Max.   :126.000                      Max.   :126.00   Max.   :5.000           #>                                                                                #>  B       C       D       E       F       G       #>  1:243   1:279   1:342   1:144   1:558   1:288   #>  2:108   2:378   2:432   2:279   2:279   2:180   #>  3:621   3:333   3:207   3:477   3:180   3:549   #>  4: 63   4: 54   4: 72   4:126   4:  9   4: 27   #>  5: 27   5: 18   5:  9   5: 36   5: 36   5: 18   #>                                                  #>                                                  pcp_data |> pcp_scale() |> summary() #>      pcp_id          pcp_x      pcp_level             pcp_y         #>  Min.   :  1.0   No     :118   Length:1062        Min.   :0.00000   #>  1st Qu.: 30.0   Average:118   Class :character   1st Qu.:0.07143   #>  Median : 59.5   A      :118   Mode  :character   Median :0.32143   #>  Mean   : 59.5   B      :118                      Mean   :0.34690   #>  3rd Qu.: 89.0   C      :118                      3rd Qu.:0.50000   #>  Max.   :118.0   D      :118                      Max.   :1.00000   #>                  (Other):354                                        #>     pcp_yend        pcp_class               No            Average      A       #>  Min.   :0.00000   Length:1062        Min.   :  1.00   Min.   :1.000   1:234   #>  1st Qu.:0.07143   Class :character   1st Qu.: 33.00   1st Qu.:1.571   2:234   #>  Median :0.32143   Mode  :character   Median : 63.50   Median :2.429   3:342   #>  Mean   :0.34690                      Mean   : 63.47   Mean   :2.311   4:198   #>  3rd Qu.:0.50000                      3rd Qu.: 94.00   3rd Qu.:3.000   5: 54   #>  Max.   :1.00000                      Max.   :126.00   Max.   :5.000           #>                                                                                #>  B       C       D       E       F       G       #>  1:243   1:279   1:342   1:144   1:558   1:288   #>  2:108   2:378   2:432   2:279   2:279   2:180   #>  3:621   3:333   3:207   3:477   3:180   3:549   #>  4: 63   4: 54   4: 72   4:126   4:  9   4: 27   #>  5: 27   5: 18   5:  9   5: 36   5: 36   5: 18   #>                                                  #>                                                  # scaling gets values of pcp_y and pcp_yend between 0 and 1"},{"path":"https://heike.github.io/ggpcp/reference/pcp_select.html","id":null,"dir":"Reference","previous_headings":"","what":"Data wrangling for GPCPs: Step 1 variable selection — pcp_select","title":"Data wrangling for GPCPs: Step 1 variable selection — pcp_select","text":"pcp_select function allows selection variables data set. variables transformed embellished long form data.","code":""},{"path":"https://heike.github.io/ggpcp/reference/pcp_select.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data wrangling for GPCPs: Step 1 variable selection — pcp_select","text":"","code":"pcp_select(data, ...)"},{"path":"https://heike.github.io/ggpcp/reference/pcp_select.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data wrangling for GPCPs: Step 1 variable selection — pcp_select","text":"data dataframe tibble ... choose columns used parallel coordinate plot. Variables can selected position, name tidyselect selector functions.","code":""},{"path":"https://heike.github.io/ggpcp/reference/pcp_select.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Data wrangling for GPCPs: Step 1 variable selection — pcp_select","text":"dataframe long form selected variables extra columns: dimensions returned data set :  6 + number input variables columns. number rows given multiple number selected variables number rows original data.","code":""},{"path":"https://heike.github.io/ggpcp/reference/pcp_select.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Data wrangling for GPCPs: Step 1 variable selection — pcp_select","text":"data pipeline feeding geom layers ggpcp package implemented three-step modularized form rather stat functions typical ggplot2 extensions. three steps data pre-processing : Note data processing steps executed call ggplot2 identity function used default ggpcp specific layers. Besides speed-executing processing steps layers, separation additional benefit, provides users possibility make specific choices step process. Additionally, separation allows cleaner user interface: parameters affecting data preparation process can moved relevant (set ) function(s) , thereby reducing  number arguments without loss functionality.","code":""},{"path":[]},{"path":"https://heike.github.io/ggpcp/reference/pcp_select.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data wrangling for GPCPs: Step 1 variable selection — pcp_select","text":"","code":"data(Carcinoma) dim(Carcinoma) #> [1] 118   9 # select all variables pcp_data <- Carcinoma |> pcp_select(1:9) dim(pcp_data) # 6 more columns, 9 times as many observations #> [1] 1062   15 head(pcp_data) #> # A tibble: 6 × 15 #>   pcp_id pcp_x pcp_level pcp_y pcp_yend pcp_class    No Average A     B     #>    <int> <fct> <chr>     <dbl>    <dbl> <chr>     <dbl>   <dbl> <fct> <fct> #> 1      1 No    1             1        1 numeric       1    3.14 4     3     #> 2      2 No    2             2        2 numeric       2    1    1     1     #> 3      3 No    3             3        3 numeric       3    3    3     3     #> 4      4 No    4             4        4 numeric       4    3.29 4     3     #> 5      5 No    5             5        5 numeric       5    3    3     3     #> 6      6 No    6             6        6 numeric       6    1.29 2     1     #> # ℹ 5 more variables: C <fct>, D <fct>, E <fct>, F <fct>, G <fct>"},{"path":"https://heike.github.io/ggpcp/reference/theme_pcp.html","id":null,"dir":"Reference","previous_headings":"","what":"Theme for parallel coordinate plots — theme_pcp","title":"Theme for parallel coordinate plots — theme_pcp","text":"function theme_pcp provides wrapper thematic choices suitable parallel coordinate plots. particular, labeling axes parallel coordinate plot quite un-informative. default theme axes labels based variable names derived data wrangling step.","code":""},{"path":"https://heike.github.io/ggpcp/reference/theme_pcp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Theme for parallel coordinate plots — theme_pcp","text":"","code":"theme_pcp(base_size = 11, base_family = \"\")"},{"path":"https://heike.github.io/ggpcp/reference/theme_pcp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Theme for parallel coordinate plots — theme_pcp","text":"base_size base font size, given pts. base_family base font family","code":""},{"path":"https://heike.github.io/ggpcp/reference/theme_pcp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Theme for parallel coordinate plots — theme_pcp","text":"ggplot2 theme object based ggplot2::theme_bw() without y axis x axes labels.","code":""},{"path":[]},{"path":"https://heike.github.io/ggpcp/reference/theme_pcp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Theme for parallel coordinate plots — theme_pcp","text":"","code":"library(ggplot2) gg <- iris |>   pcp_select(tidyselect::everything()) |>   pcp_scale() |>   pcp_arrange() |>   ggplot(aes_pcp(colour = Species)) +     geom_pcp()  # plot with the default ggplot2 theme gg  # better: gg + theme_pcp()"},{"path":[]},{"path":"https://heike.github.io/ggpcp/news/index.html","id":"ggpcp-020","dir":"Changelog","previous_headings":"","what":"ggpcp 0.2.0","title":"ggpcp 0.2.0","text":"CRAN release: 2022-11-28 Initial release","code":""}]
